services:
  backend:
    build: .
    ports:
      - "3100:3100"
    environment:
      PORT: 3100
      DATABASE_NAME: "petin"
      DATABASE_URL: "postgres://postgres:password@postgres:5432/petin"
      AUTH_TOKEN_SECRET: "a87a8411da267ddb131c5ba79a0f82f10532e106656886f739f09f35dc045e335da9838fac1965cf7b0f6ac8153ae7c2ebc8bddf6bb8cd582aba54128a063d7368a3a9863438c6b914821d2e3d128f0a7d2c07b1b0d41376ec7bb744ab9401a333618a498b4fe70bd9c8ff37efbeeb8d161599c2c590d2bc86e19426f098de5277bd3ff252eb6816da188e4a7581bf6e75c6dbba0a8a2707debb73c7dc85307a24d2514c55624b780315712770fba682098b37e29f5865e7dfb7faa050c0197657b7dcd6eaa6dcbba79765b8b7ce8191eecb8704d9a68a05e24ef0632a1a58fd36fd5f5b6c7abdf8b27d7cf8d2581d3f4757a6b2827b68f841c202ef02b96af6"
      MESSAGE_BROKER_URL: "amqp://rabbit:rabbit@rabbitmq:5672"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://backend:3100/health || exit 1
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    links:
      - postgres
      - rabbitmq
      
  postgres:
    image: postgres:17-alpine
    ports:
      - "5432:5432"
    environment: 
      POSTGRES_DB: "petin"
      POSTGRES_PASSWORD: "password"
      POSTGRES_USER: "postgres"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    volumes:
      - ./scripts/create_petin.sql:/docker-entrypoint-initdb.d/init.sql
  
  rabbitmq:
    image: rabbitmq:4-alpine
    ports:
      - '5672:5672'
    environment:
      - RABBITMQ_SECURE_PASSWORD=no
      - RABBITMQ_LOGS=-
      - RABBITMQ_DEFAULT_VHOST=/
      - RABBITMQ_DEFAULT_USER=rabbit
      - RABBITMQ_DEFAULT_PASS=rabbit
    